@charset "UTF-8";
/*****************************************************************************
 * THIS IS THE BASE FILE WHICH PULLS IN ALL THE INDIVIDUAL .SCSS FILES
 * TO GENERATE THE MAIN STYLE.CSS (& STYLE.MIN.CSS)
 * INDIVIDUAL COMPONENTS CAN BE TURNED ON/OFF
 *
 * 1. SETTINGS FILES (Sass vars etc.)
 *
 * 2. TOOLS (functions & mixins)
 *
 * 3. GENERIC (Generic, high-level styling, like resets)
 *
 * 4. BASE (Unclasses HTML elements, e.g. 'h2', 'ul')
 *
 * 5. OBJECTS (Objects and abstractions)
 *
 * 6. COMPONENTS (as designed by you)
 *
 * 7. TRUMPS (Overrides and helper classes)
 *
 * 8. USER (my working file which may be split into components etc. later)
 *		
 *****************************************************************************/
/* ALL VARIABLES AND SWITCHES INCLUDED HERE */
/*---------------------------------------------------------------------------*\
	SETTINGS -- Sass vars etc.
\*---------------------------------------------------------------------------*/
/*!
 * inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */
/*---------------------------------------------------------------------------*\
	TOOLS -- Functions & mixins
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
	GENERIC -- Generic, high-level styling, like resets
\*---------------------------------------------------------------------------*/
/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/*------------------------------------*\
    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/*------------------------------------*\
    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

/*------------------------------------*\
    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre {
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem; }

/*---------------------------------------------------------------------------*\
	BASE -- Unclasses HTML elements (e.g. 'h2', 'ul')
\*---------------------------------------------------------------------------*/
/*------------------------------------*\
    #PAGE
\*------------------------------------*/
/**
 * High-, page-level styling.
 *
 * 1. Set the default `font-size` and `line-height` for the entire project,
 *    sourced from our default variables. The `font-size` is calculated to exist
 *    in ems, the `line-height` is calculated to exist unitlessly.
 * 2. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 3. Ensure the page always fills at least the entire height of the viewport.
 * 4. Prevent certain mobile browsers from automatically zooming fonts.
 * 5. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  background-color: #fff;
  color: #333;
  overflow-y: scroll;
  /* [2] */
  min-height: 100%;
  /* [3] */
  -webkit-text-size-adjust: 100%;
  /* [4] */
  -ms-text-size-adjust: 100%;
  /* [4] */
  -moz-osx-font-smoothing: grayscale;
  /* [5] */
  -webkit-font-smoothing: antialiased;
  /* [5] */ }

/*------------------------------------*\
    #PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.lede {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.3333333333; }

/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1–6.
 */
h1 {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.3333333333; }

h2 {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6; }

h3 {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

h4 {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2; }

h5 {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5; }

h6 {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.7142857143; }

/*------------------------------------*\
    #TEXT
\*------------------------------------*/
/**
 * additional settings for text sizes
 * plus make all (headings included) responsive
 */
.kilo {
  font-size: 48px;
  font-size: 3rem;
  line-height: 1; }
  @media screen and (max-width: 767px) {
    .kilo {
      font-size: 42px;
      font-size: 2.625rem;
      line-height: 1.1428571429; } }
  @media screen and (max-width: 359px) {
    .kilo {
      font-size: 34px;
      font-size: 2.125rem;
      line-height: 1.4117647059; } }

.mega {
  font-size: 64px;
  font-size: 4rem;
  line-height: 1.125; }
  @media screen and (max-width: 767px) {
    .mega {
      font-size: 56px;
      font-size: 3.5rem;
      line-height: 1.2857142857; } }
  @media screen and (max-width: 359px) {
    .mega {
      font-size: 40px;
      font-size: 2.5rem;
      line-height: 1.2; } }

.giga {
  font-size: 80px;
  font-size: 5rem;
  line-height: 1.2; }
  @media screen and (max-width: 767px) {
    .giga {
      font-size: 70px;
      font-size: 4.375rem;
      line-height: 1.0285714286; } }
  @media screen and (max-width: 359px) {
    .giga {
      font-size: 56px;
      font-size: 3.5rem;
      line-height: 1.2857142857; } }

.tera {
  font-size: 96px;
  font-size: 6rem;
  line-height: 1; }
  @media screen and (max-width: 767px) {
    .tera {
      font-size: 86px;
      font-size: 5.375rem;
      line-height: 1.1162790698; } }
  @media screen and (max-width: 359px) {
    .tera {
      font-size: 68px;
      font-size: 4.25rem;
      line-height: 1.0588235294; } }

small, .milli {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2; }

.micro {
  font-size: 10px;
  font-size: 0.625rem;
  line-height: 2.4; }

@media screen and (max-width: 767px) {
  h1, .alpha {
    font-size: 32px;
    font-size: 2rem;
    line-height: 1.5; } }
@media screen and (max-width: 359px) {
  h1, .alpha {
    font-size: 28px;
    font-size: 1.75rem;
    line-height: 1.7142857143; } }

@media screen and (max-width: 767px) {
  h2, .beta {
    font-size: 26px;
    font-size: 1.625rem;
    line-height: 1.8461538462; } }
@media screen and (max-width: 359px) {
  h2, .beta {
    font-size: 24px;
    font-size: 1.5rem;
    line-height: 1; } }

@media screen and (max-width: 767px) {
  h3, .gamma {
    font-size: 22px;
    font-size: 1.375rem;
    line-height: 1.0909090909; } }
@media screen and (max-width: 359px) {
  h3, .gamma {
    font-size: 20px;
    font-size: 1.25rem;
    line-height: 1.2; } }

@media screen and (max-width: 767px) {
  h4, .delta {
    font-size: 18px;
    font-size: 1.125rem;
    line-height: 1.3333333333; } }

/*------------------------------------*\
    #LISTS
\*------------------------------------*/
/**
 * Remove extra vertical spacing when nesting lists.
 */
li > ul,
li > ol {
  margin-bottom: 0; }

/*------------------------------------*\
    #IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */ }

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
.gm-style img,
img[width],
img[height] {
  /* [2] */
  max-width: none; }

/*---------------------------------------------------------------------------*\
	OBJECTS -- Objects and abstractions
\*---------------------------------------------------------------------------*/
/*------------------------------------*\
    #BLOCK
\*------------------------------------*/
/**
 * The block object simply stacks an image on top of some text-like content.
 */
/**
 * Stacked image-with-text object. A simple abstraction to cover a very commonly
 * occurring design pattern.
 */
.block {
  display: block; }

/**
 * 1. Eliminate whitespace around images.
 */
.block__img {
  vertical-align: middle;
  /* [1] */
  margin-bottom: 24px; }

/**
 * Text-content.
 */
.block__body {
  display: block; }

/*------------------------------------*\
    #BOX
\*------------------------------------*/
/**
 * The box object simply boxes off content.
 */
/**
 * 1. So we can apply the `.box` class to naturally-inline elements.
 */
.box {
  display: block;
  /* [1] */
  padding: 24px; }
  .box > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
/**
 * A simple button object.
 */
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  border: none;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 11px 23px;
  /* [7] */
  background-color: #aaa;
  border: 1px solid #aaa;
  border-radius: 4px; }
  .btn, .btn:hover, .btn:active, .btn:focus {
    text-decoration: none;
    /* [4] */
    color: #fff; }

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Small buttons.
 */
.btn--small {
  padding: 5px 11px;
  /* [7] */ }

/**
 * Large buttons.
 */
.btn--large {
  padding: 23px 47px;
  /* [7] */ }

/**
 * Full-width buttons.
 */
.btn--full {
  width: 100%; }

/**
 * Round-ended buttons.
 *
 * 1. Overly-large value to ensure the radius rounds the whole end of the
 *    button.
 */
.btn--pill {
  border-radius: 100px;
  /* [1] */ }

/*------------------------------------*\
    #FLAG
\*------------------------------------*/
/**
 * The flag object is a design pattern similar to the media object, however it
 * utilises `display: table[-cell];` to give us control over the vertical
 * alignments of the text and image. csswizardry.com/2013/05/the-flag-object
 */
/**
 * 1. Allows us to control vertical alignments
 * 2. Force the object to be the full width of its parent. Combined with [1],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.flag {
  display: table;
  /* [1] */
  width: 100%;
  /* [2] */ }

/**
 * Items within a flag object. There should only ever be one of each.
 *
 * 1. Default to aligning content to their middles.
 */
.flag__img,
.flag__body {
  display: table-cell;
  vertical-align: middle;
  /* [1] */ }

/**
 * Flag images have a space between them and the body of the object.
 */
.flag__img {
  padding-right: 24px; }
  .flag__img > img {
    display: block;
    max-width: none; }

/**
 * The container for the main content of the flag object.
 *
 * 1. Forces the `.flag__body` to take up all remaining space.
 */
.flag__body {
  width: 100%;
  /* [1] */ }
  .flag__body,
  .flag__body > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    #LAYOUT
\*------------------------------------*/
/**
 * The inuitcss layout system uses `box-sizing: border-box;` and
 * `display: inline-block;` to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with
 * the widths found in `trumps.widths`.
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -24px; }

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
.layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */ }

/*------------------------------------*\
    #LIST-BARE
\*------------------------------------*/
/**
 * The list-bare object simply removes any indents and bullet points from lists.
 */
.list-bare {
  margin: 0;
  padding: 0;
  list-style: none; }

/*------------------------------------*\
    #LIST-BLOCK
\*------------------------------------*/
/**
 * The list-block object creates blocky list items out of a `ul` or `ol`.
 */
.list-block {
  margin: 0;
  padding: 0;
  list-style: none; }

.list-block__item,
.list-block > li {
  padding: 24px; }

/*------------------------------------*\
    #LIST-INLINE
\*------------------------------------*/
/**
 * The list-inline object simply displays a list of items in one line.
 */
.list-inline {
  margin: 0;
  padding: 0;
  list-style: none; }
  .list-inline > li {
    display: inline-block; }

/*------------------------------------*\
    #LIST-UI
\*------------------------------------*/
/**
 * The UI list object creates blocky list items with a keyline separator out of
 * a `ul` or `ol`.
 */
.list-ui,
.list-ui__item,
.list-ui > li {
  border: 0 solid #ccc; }

.list-ui {
  margin: 0;
  padding: 0;
  list-style: none;
  border-top-width: 1px; }

.list-ui__item,
.list-ui > li {
  padding: 24px;
  border-bottom-width: 1px; }

/*------------------------------------*\
    #MEDIA
\*------------------------------------*/
/**
 * Place any image- and text-like content side-by-side, as per:
 * stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 */
.media {
  display: block; }

.media__img {
  float: left;
  margin-right: 24px; }
  .media__img > img {
    display: block; }

.media__body {
  overflow: hidden;
  display: block; }
  .media__body,
  .media__body > :last-child {
    margin-bottom: 0; }

/*------------------------------------*\
    $NAV
\*------------------------------------*/
/**
 * Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
 * When used on an `ol` or `ul`, this class throws the list into horizontal mode
 * e.g.:
 *
   <ul class=nav>
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Demo: jsfiddle.net/inuitcss/Vnph4
 *
 */
.nav {
  list-style: none;
  margin-left: 0; }
  .nav > li,
  .nav > li > a {
    display: inline-block;
    *display: inline;
    zoom: 1; }

/**
 * `.nav--stacked` extends `.nav` and throws the list into vertical mode, e.g.:
 *
   <ul class="nav  nav--stacked">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
.nav--stacked > li {
  display: list-item; }
  .nav--stacked > li > a {
    display: block; }

/**
 * `.nav--banner` extends `.nav` and centres the list, e.g.:
 *
   <ul class="nav  nav--banner">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
.nav--banner {
  text-align: center; }

/**
 * Give nav links a big, blocky hit area. Extends `.nav`, e.g.:
 *
   <ul class="nav  nav--block">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
.nav--block {
  line-height: 1;
  /**
   * Remove whitespace caused by `inline-block`.
   */
  letter-spacing: -0.31em;
  word-spacing: -0.43em;
  white-space: nowrap; }
  .nav--block > li {
    letter-spacing: normal;
    word-spacing: normal; }
    .nav--block > li > a {
      padding: 12px; }

/**
 * Force a nav to occupy 100% of the available width of its parent. Extends
 * `.nav`, e.g.:
 *
   <ul class="nav  nav--fit">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Thanks to @pimpl for this idea!
 */
.nav--fit {
  display: table;
  width: 100%; }
  .nav--fit > li {
    display: table-cell; }
    .nav--fit > li > a {
      display: block; }

/**
 * Make a list of keywords. Extends `.nav`, e.g.:
 *
   `<ul class="nav  nav--keywords>`
 *
 */
.nav--keywords > li:after {
  content: "\002C" "\00A0"; }
.nav--keywords > li:last-child:after {
  display: none; }

/*------------------------------------*\
    #PACK
\*------------------------------------*/
/**
 * The pack object simply causes any number of elements pack up horizontally to
 * automatically fill an equal, fluid width of their parent.
 */
/**
 * 1. Fill all available space.
 * 2. Cause children to be automatically equally sized.
 */
.pack {
  width: 100%;
  /* [1] */
  display: table;
  table-layout: fixed;
  /* [2] */ }

/**
 * Cause children to adopt table-like structure.
 */
.pack__item {
  display: table-cell; }

/*------------------------------------*\
    #TABLES
\*------------------------------------*/
.table {
  width: 100%; }

/*------------------------------------*\
    #TABS
\*------------------------------------*/
/**
 * A simple abstraction for making equal-width navigation tabs.
 */
/**
 * 1. Reset any residual styles (most likely from lists).
 * 2. Tables for layout!
 * 3. Force all `table-cell` children to have equal widths.
 * 4. Force the object to be the full width of its parent. Combined with [2],
 *    this makes the object behave in a quasi-`display: block;` manner.
 */
.tabs {
  margin: 0;
  /* [1] */
  padding: 0;
  /* [1] */
  list-style: none;
  /* [1] */
  display: table;
  /* [2] */
  table-layout: fixed;
  /* [3] */
  width: 100%;
  /* [4] */
  text-align: center; }

.tabs__item {
  display: table-cell;
  /* [2] */ }

.tabs__link {
  display: block; }

/*------------------------------------*\
    #CORSET
\*------------------------------------*/
.corset {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  @media screen and (min-width: 360px) {
    .corset {
      max-width: 512px; } }
  @media screen and (min-width: 768px) {
    .corset {
      max-width: 683px; } }
  @media screen and (min-width: 1024px) {
    .corset {
      max-width: 840px; } }

.corset--snug {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  @media screen and (min-width: 360px) {
    .corset--snug {
      max-width: 384px; } }
  @media screen and (min-width: 768px) {
    .corset--snug {
      max-width: 512px; } }
  @media screen and (min-width: 1024px) {
    .corset--snug {
      max-width: 630px; } }

.corset--loose {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto; }
  @media screen and (min-width: 360px) {
    .corset--loose {
      max-width: 614px; } }
  @media screen and (min-width: 768px) {
    .corset--loose {
      max-width: 819px; } }
  @media screen and (min-width: 1024px) {
    .corset--loose {
      max-width: 1008px; } }

/*------------------------------------*\
    #STRIPE
\*------------------------------------*/
.stripe {
  width: 100%;
  margin: 0;
  margin-bottom: 24px;
  padding: 24px; }

.stripe--large {
  padding: 48px; }

.stripe--small {
  padding: 12px; }

.stripe--light {
  background-color: #f4f4f4;
  color: inherit; }

.stripe--dark {
  background-color: #aaa;
  color: #f4f4f4; }

/*---------------------------------------------------------------------------*\
	COMPONENTS -- Your designed UI elements
\*---------------------------------------------------------------------------*/
/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/
.btn {
  -webkit-transition: 0.2s;
          transition: 0.2s;
  border-bottom-width: 2px;
  border-bottom-color: #848484; }
  .btn:hover, .btn:active, .btn:focus {
    background-color: #848484;
    border-color: #848484;
    border-bottom-color: #5d5d5d;
    color: white; }

.btn--inverse {
  background-color: #111;
  border-color: #111;
  border-bottom-color: #373737;
  color: #f4f4f4; }
  .btn--inverse:hover, .btn--inverse:active, .btn--inverse:focus {
    background-color: #373737;
    border-color: #373737;
    border-bottom-color: #5e5e5e; }

.btn--error {
  background-color: #c00;
  border-color: #c00;
  border-bottom-color: maroon;
  color: #fff; }
  .btn--error:hover, .btn--error:active, .btn--error:focus {
    background-color: maroon;
    border-color: maroon;
    border-bottom-color: #330000; }

.btn--success {
  background-color: #0c0;
  border-color: #0c0;
  border-bottom-color: green;
  color: #fff; }
  .btn--success:hover, .btn--success:active, .btn--success:focus {
    background-color: green;
    border-color: green;
    border-bottom-color: #003300; }

.btn--warning {
  background-color: #ff851b;
  border-color: #ff851b;
  border-bottom-color: #ce6000;
  color: #fff; }
  .btn--warning:hover, .btn--warning:active, .btn--warning:focus {
    background-color: #ce6000;
    border-color: #ce6000;
    border-bottom-color: #813c00; }

.btn--info {
  background-color: #00c;
  border-color: #00c;
  border-bottom-color: navy;
  color: #fff; }
  .btn--info:hover, .btn--info:active, .btn--info:focus {
    background-color: navy;
    border-color: navy;
    border-bottom-color: #000033; }

.btn--outline {
  background-color: transparent;
  color: #777777; }
  .btn--outline:hover {
    background-color: #aaa;
    border-color: #aaa;
    border-bottom-color: #848484;
    color: #fff; }

.btn--inverse.btn--outline {
  color: #111; }
  .btn--inverse.btn--outline:hover {
    background-color: #111;
    border-color: #111;
    border-bottom-color: #373737;
    color: #fff; }

.btn--error.btn--outline {
  color: #c00;
  border-bottom-color: #a60000; }
  .btn--error.btn--outline:hover {
    background-color: #c00;
    border-color: #c00;
    border-bottom-color: maroon;
    color: #fff; }

.btn--success.btn--outline {
  color: #0c0;
  border-bottom-color: #00a600; }
  .btn--success.btn--outline:hover {
    background-color: #0c0;
    border-color: #0c0;
    border-bottom-color: green;
    color: #fff; }

.btn--warning.btn--outline {
  color: #ff851b;
  border-bottom-color: #f47100; }
  .btn--warning.btn--outline:hover {
    background-color: #ff851b;
    border-color: #ff851b;
    border-bottom-color: #ce6000;
    color: #fff; }

.btn--info.btn--outline {
  color: #00c;
  border-bottom-color: #0000a6; }
  .btn--info.btn--outline:hover {
    background-color: #00c;
    border-color: #00c;
    border-bottom-color: navy;
    color: #fff; }

/*------------------------------------*\
    # NOTIFICATIONS
\*------------------------------------*/
.notification {
  display: block;
  width: 100%;
  padding: 12px;
  margin-bottom: 24px;
  border-left: 3px solid #aaa;
  color: #5d5d5d;
  background-color: #ddd; }
  .notification.error {
    border-color: #c00;
    color: maroon;
    background-color: #ff8080; }
  .notification.success {
    border-color: #0c0;
    color: green;
    background-color: #80ff80; }
  .notification.warning {
    border-color: #ff851b;
    color: #ce6000;
    background-color: #ffe5ce; }
  .notification.info {
    border-color: #00c;
    color: navy;
    background-color: #8080ff; }
  .notification.inverse {
    border-color: #6a6a6a;
    color: #f4f4f4;
    background-color: #111; }
  .notification.empty {
    text-align: center;
    background-color: #f4f4f4;
    border: 1px dashed #ddd; }
  .notification p:last-child {
    margin-bottom: 0; }

/*--------------------------------------------*\
    #SIMPLE DROPDOWN MENU WITH MOBILE VERSION
\*--------------------------------------------*/
nav a {
  text-decoration: none; }

nav ul {
  line-height: 1;
  cursor: pointer;
  margin-bottom: 0;
  z-index: 999;
  /**
   * Remove whitespace caused by `inline-block`.
   */
  letter-spacing: -0.31em;
  word-spacing: -0.43em;
  white-space: nowrap; }
  nav ul > li {
    position: relative;
    letter-spacing: normal;
    word-spacing: normal;
    z-index: inherit; }
    nav ul > li > a {
      display: block;
      padding: 16px; }

a.inactive {
  cursor: default; }

.nav li ul {
  position: absolute;
  top: 50px;
  left: 0;
  margin-left: 0;
  width: 240px;
  display: none;
  z-index: inherit; }
  @media screen and (max-width: 767px) {
    .nav li ul {
      position: relative;
      display: block;
      top: 0;
      padding-left: 24px;
      width: 100%; } }

.nav li ul li {
  display: block; }

.nav li:hover ul {
  display: block; }

@media screen and (max-width: 767px) {
  .nav li {
    display: block; } }

.site-nav__toggle {
  display: none; }
  @media screen and (max-width: 767px) {
    .site-nav__toggle {
      display: initial; } }

@media screen and (max-width: 767px) {
  .site-nav {
    overflow: hidden;
    max-height: 0;
    -webkit-transition: max-height 0.66s ease-in-out;
            transition: max-height 0.66s ease-in-out; } }
/*---------------------------------------------------------------------------*\
	THEME -- Skin 
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
	TRUMPS -- Overrides and helper classes
\*---------------------------------------------------------------------------*/
/*------------------------------------*\
    #CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.clearfix` class appearing
 * over and over in your markup.
 */
.clearfix:after, .nav:after,
.box:after,
.media:after {
  content: "";
  display: table;
  clear: both; }

/*------------------------------------*\
    #PRINT
\*------------------------------------*/
/**
 * Very crude, reset-like styles taken from the HTML5 Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/3c3c5e64604209a4d63e1e4c48dd245d45fadfd9/css/main.css#L200-L234
 */
@media print {
  * {
    background: transparent !important;
    color: #000 !important;
    /* Black prints faster: h5bp.com/s */
    box-shadow: none !important;
    text-shadow: none !important; }

  a,
  a:visited {
    text-decoration: underline; }

  a[href]:after {
    content: " (" attr(href) ")"; }

  abbr[title]:after {
    content: " (" attr(title) ")"; }

  /**
   * Don’t show links that are fragment identifiers, or use the `javascript:`
   * pseudo protocol.
   */
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: ""; } }
/*------------------------------------*\
    #SPACING
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/**
 * Margin helper classes.
 *
 * Add margins.
 */
.m {
  margin: 24px !important; }

.mt {
  margin-top: 24px !important; }

.mr {
  margin-right: 24px !important; }

.mb {
  margin-bottom: 24px !important; }

.ml {
  margin-left: 24px !important; }

.mh {
  margin-right: 24px !important;
  margin-left: 24px !important; }

.mv {
  margin-top: 24px !important;
  margin-bottom: 24px !important; }

/*------------------------------------*\
    #SPACING-RESPONSIVE
\*------------------------------------*/
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
/*------------------------------------*\
    #WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.2/3`) or a spoken-
 * word format (e.g. `two-thirds`). Toggle formats by overriding the
 * `$inuit-use-fractions` variable defined below.
 */
/**
 * Whole.
 */
.one-whole {
  width: 100% !important; }

/**
 * Halves.
 */
.one-half,
.two-quarters,
.three-sixths,
.four-eighths,
.five-tenths,
.six-twelfths {
  width: 50% !important; }

/**
 * Thirds.
 */
.one-third,
.two-sixths,
.three-ninths,
.four-twelfths {
  width: 33.3333333% !important; }

.two-thirds,
.four-sixths,
.six-ninths,
.eight-twelfths {
  width: 66.6666666% !important; }

/**
 * Quarters.
 */
.one-quarter,
.two-eighths,
.three-twelfths {
  width: 25% !important; }

.three-quarters,
.six-eighths,
.nine-twelfths {
  width: 75% !important; }

/**
 * Fifths.
 */
.one-fifth,
.two-tenths {
  width: 20% !important; }

.two-fifths,
.four-tenths {
  width: 40% !important; }

.three-fifths,
.six-tenths {
  width: 60% !important; }

.four-fifths,
.eight-tenths {
  width: 80% !important; }

/**
 * Sixths.
 */
.one-sixth,
.two-twelfths {
  width: 16.6666666% !important; }

.five-sixths,
.ten-twelfths {
  width: 83.3333333% !important; }

/**
 * Eighths.
 */
.one-eighth {
  width: 12.5% !important; }

.three-eighths {
  width: 37.5% !important; }

.five-eighths {
  width: 62.5% !important; }

.seven-eighths {
  width: 87.5% !important; }

/**
 * Ninths.
 */
.one-ninth {
  width: 11.1111111% !important; }

.two-ninths {
  width: 22.2222222% !important; }

.four-ninths {
  width: 44.4444444% !important; }

.five-ninths {
  width: 55.5555555% !important; }

.seven-ninths {
  width: 77.7777777% !important; }

.eight-ninths {
  width: 88.8888888% !important; }

/**
 * Tenths.
 */
.one-tenth {
  width: 10% !important; }

.three-tenths {
  width: 30% !important; }

.seven-tenths {
  width: 70% !important; }

.nine-tenths {
  width: 90% !important; }

/**
 * Twelfths.
 */
.one-twelfth {
  width: 8.3333333% !important; }

.five-twelfths {
  width: 41.6666666% !important; }

.seven-twelfths {
  width: 58.3333333% !important; }

.eleven-twelfths {
  width: 91.6666666% !important; }

/*------------------------------------*\
    #WIDTHS-RESPONSIVE
\*------------------------------------*/
/**
 * Responsive width classes based on your responsive settings.
 */
@media screen and (max-width: 359px) {
  /**
   * Whole.
   */
  .mq-xs-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-xs-one-half,
  .mq-xs-two-quarters,
  .mq-xs-three-sixths,
  .mq-xs-four-eighths,
  .mq-xs-five-tenths,
  .mq-xs-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-xs-one-third,
  .mq-xs-two-sixths,
  .mq-xs-three-ninths,
  .mq-xs-four-twelfths {
    width: 33.3333333% !important; }

  .mq-xs-two-thirds,
  .mq-xs-four-sixths,
  .mq-xs-six-ninths,
  .mq-xs-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-xs-one-quarter,
  .mq-xs-two-eighths,
  .mq-xs-three-twelfths {
    width: 25% !important; }

  .mq-xs-three-quarters,
  .mq-xs-six-eighths,
  .mq-xs-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-xs-one-fifth,
  .mq-xs-two-tenths {
    width: 20% !important; }

  .mq-xs-two-fifths,
  .mq-xs-four-tenths {
    width: 40% !important; }

  .mq-xs-three-fifths,
  .mq-xs-six-tenths {
    width: 60% !important; }

  .mq-xs-four-fifths,
  .mq-xs-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-xs-one-sixth,
  .mq-xs-two-twelfths {
    width: 16.6666666% !important; }

  .mq-xs-five-sixths,
  .mq-xs-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-xs-one-eighth {
    width: 12.5% !important; }

  .mq-xs-three-eighths {
    width: 37.5% !important; }

  .mq-xs-five-eighths {
    width: 62.5% !important; }

  .mq-xs-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-xs-one-ninth {
    width: 11.1111111% !important; }

  .mq-xs-two-ninths {
    width: 22.2222222% !important; }

  .mq-xs-four-ninths {
    width: 44.4444444% !important; }

  .mq-xs-five-ninths {
    width: 55.5555555% !important; }

  .mq-xs-seven-ninths {
    width: 77.7777777% !important; }

  .mq-xs-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-xs-one-tenth {
    width: 10% !important; }

  .mq-xs-three-tenths {
    width: 30% !important; }

  .mq-xs-seven-tenths {
    width: 70% !important; }

  .mq-xs-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-xs-one-twelfth {
    width: 8.3333333% !important; }

  .mq-xs-five-twelfths {
    width: 41.6666666% !important; }

  .mq-xs-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-xs-eleven-twelfths {
    width: 91.6666666% !important; } }
@media screen and (max-width: 767px) {
  /**
   * Whole.
   */
  .mq-sm-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-sm-one-half,
  .mq-sm-two-quarters,
  .mq-sm-three-sixths,
  .mq-sm-four-eighths,
  .mq-sm-five-tenths,
  .mq-sm-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-sm-one-third,
  .mq-sm-two-sixths,
  .mq-sm-three-ninths,
  .mq-sm-four-twelfths {
    width: 33.3333333% !important; }

  .mq-sm-two-thirds,
  .mq-sm-four-sixths,
  .mq-sm-six-ninths,
  .mq-sm-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-sm-one-quarter,
  .mq-sm-two-eighths,
  .mq-sm-three-twelfths {
    width: 25% !important; }

  .mq-sm-three-quarters,
  .mq-sm-six-eighths,
  .mq-sm-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-sm-one-fifth,
  .mq-sm-two-tenths {
    width: 20% !important; }

  .mq-sm-two-fifths,
  .mq-sm-four-tenths {
    width: 40% !important; }

  .mq-sm-three-fifths,
  .mq-sm-six-tenths {
    width: 60% !important; }

  .mq-sm-four-fifths,
  .mq-sm-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-sm-one-sixth,
  .mq-sm-two-twelfths {
    width: 16.6666666% !important; }

  .mq-sm-five-sixths,
  .mq-sm-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-sm-one-eighth {
    width: 12.5% !important; }

  .mq-sm-three-eighths {
    width: 37.5% !important; }

  .mq-sm-five-eighths {
    width: 62.5% !important; }

  .mq-sm-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-sm-one-ninth {
    width: 11.1111111% !important; }

  .mq-sm-two-ninths {
    width: 22.2222222% !important; }

  .mq-sm-four-ninths {
    width: 44.4444444% !important; }

  .mq-sm-five-ninths {
    width: 55.5555555% !important; }

  .mq-sm-seven-ninths {
    width: 77.7777777% !important; }

  .mq-sm-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-sm-one-tenth {
    width: 10% !important; }

  .mq-sm-three-tenths {
    width: 30% !important; }

  .mq-sm-seven-tenths {
    width: 70% !important; }

  .mq-sm-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-sm-one-twelfth {
    width: 8.3333333% !important; }

  .mq-sm-five-twelfths {
    width: 41.6666666% !important; }

  .mq-sm-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-sm-eleven-twelfths {
    width: 91.6666666% !important; } }
@media screen and (max-width: 1023px) {
  /**
   * Whole.
   */
  .mq-md-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-md-one-half,
  .mq-md-two-quarters,
  .mq-md-three-sixths,
  .mq-md-four-eighths,
  .mq-md-five-tenths,
  .mq-md-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-md-one-third,
  .mq-md-two-sixths,
  .mq-md-three-ninths,
  .mq-md-four-twelfths {
    width: 33.3333333% !important; }

  .mq-md-two-thirds,
  .mq-md-four-sixths,
  .mq-md-six-ninths,
  .mq-md-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-md-one-quarter,
  .mq-md-two-eighths,
  .mq-md-three-twelfths {
    width: 25% !important; }

  .mq-md-three-quarters,
  .mq-md-six-eighths,
  .mq-md-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-md-one-fifth,
  .mq-md-two-tenths {
    width: 20% !important; }

  .mq-md-two-fifths,
  .mq-md-four-tenths {
    width: 40% !important; }

  .mq-md-three-fifths,
  .mq-md-six-tenths {
    width: 60% !important; }

  .mq-md-four-fifths,
  .mq-md-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-md-one-sixth,
  .mq-md-two-twelfths {
    width: 16.6666666% !important; }

  .mq-md-five-sixths,
  .mq-md-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-md-one-eighth {
    width: 12.5% !important; }

  .mq-md-three-eighths {
    width: 37.5% !important; }

  .mq-md-five-eighths {
    width: 62.5% !important; }

  .mq-md-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-md-one-ninth {
    width: 11.1111111% !important; }

  .mq-md-two-ninths {
    width: 22.2222222% !important; }

  .mq-md-four-ninths {
    width: 44.4444444% !important; }

  .mq-md-five-ninths {
    width: 55.5555555% !important; }

  .mq-md-seven-ninths {
    width: 77.7777777% !important; }

  .mq-md-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-md-one-tenth {
    width: 10% !important; }

  .mq-md-three-tenths {
    width: 30% !important; }

  .mq-md-seven-tenths {
    width: 70% !important; }

  .mq-md-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-md-one-twelfth {
    width: 8.3333333% !important; }

  .mq-md-five-twelfths {
    width: 41.6666666% !important; }

  .mq-md-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-md-eleven-twelfths {
    width: 91.6666666% !important; } }
@media screen and (max-width: 1259px) {
  /**
   * Whole.
   */
  .mq-lg-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-lg-one-half,
  .mq-lg-two-quarters,
  .mq-lg-three-sixths,
  .mq-lg-four-eighths,
  .mq-lg-five-tenths,
  .mq-lg-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-lg-one-third,
  .mq-lg-two-sixths,
  .mq-lg-three-ninths,
  .mq-lg-four-twelfths {
    width: 33.3333333% !important; }

  .mq-lg-two-thirds,
  .mq-lg-four-sixths,
  .mq-lg-six-ninths,
  .mq-lg-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-lg-one-quarter,
  .mq-lg-two-eighths,
  .mq-lg-three-twelfths {
    width: 25% !important; }

  .mq-lg-three-quarters,
  .mq-lg-six-eighths,
  .mq-lg-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-lg-one-fifth,
  .mq-lg-two-tenths {
    width: 20% !important; }

  .mq-lg-two-fifths,
  .mq-lg-four-tenths {
    width: 40% !important; }

  .mq-lg-three-fifths,
  .mq-lg-six-tenths {
    width: 60% !important; }

  .mq-lg-four-fifths,
  .mq-lg-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-lg-one-sixth,
  .mq-lg-two-twelfths {
    width: 16.6666666% !important; }

  .mq-lg-five-sixths,
  .mq-lg-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-lg-one-eighth {
    width: 12.5% !important; }

  .mq-lg-three-eighths {
    width: 37.5% !important; }

  .mq-lg-five-eighths {
    width: 62.5% !important; }

  .mq-lg-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-lg-one-ninth {
    width: 11.1111111% !important; }

  .mq-lg-two-ninths {
    width: 22.2222222% !important; }

  .mq-lg-four-ninths {
    width: 44.4444444% !important; }

  .mq-lg-five-ninths {
    width: 55.5555555% !important; }

  .mq-lg-seven-ninths {
    width: 77.7777777% !important; }

  .mq-lg-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-lg-one-tenth {
    width: 10% !important; }

  .mq-lg-three-tenths {
    width: 30% !important; }

  .mq-lg-seven-tenths {
    width: 70% !important; }

  .mq-lg-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-lg-one-twelfth {
    width: 8.3333333% !important; }

  .mq-lg-five-twelfths {
    width: 41.6666666% !important; }

  .mq-lg-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-lg-eleven-twelfths {
    width: 91.6666666% !important; } }
@media screen and (min-width: 1260px) {
  /**
   * Whole.
   */
  .mq-xl-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-xl-one-half,
  .mq-xl-two-quarters,
  .mq-xl-three-sixths,
  .mq-xl-four-eighths,
  .mq-xl-five-tenths,
  .mq-xl-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-xl-one-third,
  .mq-xl-two-sixths,
  .mq-xl-three-ninths,
  .mq-xl-four-twelfths {
    width: 33.3333333% !important; }

  .mq-xl-two-thirds,
  .mq-xl-four-sixths,
  .mq-xl-six-ninths,
  .mq-xl-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-xl-one-quarter,
  .mq-xl-two-eighths,
  .mq-xl-three-twelfths {
    width: 25% !important; }

  .mq-xl-three-quarters,
  .mq-xl-six-eighths,
  .mq-xl-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-xl-one-fifth,
  .mq-xl-two-tenths {
    width: 20% !important; }

  .mq-xl-two-fifths,
  .mq-xl-four-tenths {
    width: 40% !important; }

  .mq-xl-three-fifths,
  .mq-xl-six-tenths {
    width: 60% !important; }

  .mq-xl-four-fifths,
  .mq-xl-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-xl-one-sixth,
  .mq-xl-two-twelfths {
    width: 16.6666666% !important; }

  .mq-xl-five-sixths,
  .mq-xl-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-xl-one-eighth {
    width: 12.5% !important; }

  .mq-xl-three-eighths {
    width: 37.5% !important; }

  .mq-xl-five-eighths {
    width: 62.5% !important; }

  .mq-xl-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-xl-one-ninth {
    width: 11.1111111% !important; }

  .mq-xl-two-ninths {
    width: 22.2222222% !important; }

  .mq-xl-four-ninths {
    width: 44.4444444% !important; }

  .mq-xl-five-ninths {
    width: 55.5555555% !important; }

  .mq-xl-seven-ninths {
    width: 77.7777777% !important; }

  .mq-xl-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-xl-one-tenth {
    width: 10% !important; }

  .mq-xl-three-tenths {
    width: 30% !important; }

  .mq-xl-seven-tenths {
    width: 70% !important; }

  .mq-xl-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-xl-one-twelfth {
    width: 8.3333333% !important; }

  .mq-xl-five-twelfths {
    width: 41.6666666% !important; }

  .mq-xl-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-xl-eleven-twelfths {
    width: 91.6666666% !important; } }
@media screen and (min-width: 360px) {
  /**
   * Whole.
   */
  .mq-sm-up-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-sm-up-one-half,
  .mq-sm-up-two-quarters,
  .mq-sm-up-three-sixths,
  .mq-sm-up-four-eighths,
  .mq-sm-up-five-tenths,
  .mq-sm-up-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-sm-up-one-third,
  .mq-sm-up-two-sixths,
  .mq-sm-up-three-ninths,
  .mq-sm-up-four-twelfths {
    width: 33.3333333% !important; }

  .mq-sm-up-two-thirds,
  .mq-sm-up-four-sixths,
  .mq-sm-up-six-ninths,
  .mq-sm-up-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-sm-up-one-quarter,
  .mq-sm-up-two-eighths,
  .mq-sm-up-three-twelfths {
    width: 25% !important; }

  .mq-sm-up-three-quarters,
  .mq-sm-up-six-eighths,
  .mq-sm-up-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-sm-up-one-fifth,
  .mq-sm-up-two-tenths {
    width: 20% !important; }

  .mq-sm-up-two-fifths,
  .mq-sm-up-four-tenths {
    width: 40% !important; }

  .mq-sm-up-three-fifths,
  .mq-sm-up-six-tenths {
    width: 60% !important; }

  .mq-sm-up-four-fifths,
  .mq-sm-up-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-sm-up-one-sixth,
  .mq-sm-up-two-twelfths {
    width: 16.6666666% !important; }

  .mq-sm-up-five-sixths,
  .mq-sm-up-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-sm-up-one-eighth {
    width: 12.5% !important; }

  .mq-sm-up-three-eighths {
    width: 37.5% !important; }

  .mq-sm-up-five-eighths {
    width: 62.5% !important; }

  .mq-sm-up-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-sm-up-one-ninth {
    width: 11.1111111% !important; }

  .mq-sm-up-two-ninths {
    width: 22.2222222% !important; }

  .mq-sm-up-four-ninths {
    width: 44.4444444% !important; }

  .mq-sm-up-five-ninths {
    width: 55.5555555% !important; }

  .mq-sm-up-seven-ninths {
    width: 77.7777777% !important; }

  .mq-sm-up-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-sm-up-one-tenth {
    width: 10% !important; }

  .mq-sm-up-three-tenths {
    width: 30% !important; }

  .mq-sm-up-seven-tenths {
    width: 70% !important; }

  .mq-sm-up-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-sm-up-one-twelfth {
    width: 8.3333333% !important; }

  .mq-sm-up-five-twelfths {
    width: 41.6666666% !important; }

  .mq-sm-up-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-sm-up-eleven-twelfths {
    width: 91.6666666% !important; } }
@media screen and (min-width: 768px) {
  /**
   * Whole.
   */
  .mq-md-up-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-md-up-one-half,
  .mq-md-up-two-quarters,
  .mq-md-up-three-sixths,
  .mq-md-up-four-eighths,
  .mq-md-up-five-tenths,
  .mq-md-up-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-md-up-one-third,
  .mq-md-up-two-sixths,
  .mq-md-up-three-ninths,
  .mq-md-up-four-twelfths {
    width: 33.3333333% !important; }

  .mq-md-up-two-thirds,
  .mq-md-up-four-sixths,
  .mq-md-up-six-ninths,
  .mq-md-up-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-md-up-one-quarter,
  .mq-md-up-two-eighths,
  .mq-md-up-three-twelfths {
    width: 25% !important; }

  .mq-md-up-three-quarters,
  .mq-md-up-six-eighths,
  .mq-md-up-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-md-up-one-fifth,
  .mq-md-up-two-tenths {
    width: 20% !important; }

  .mq-md-up-two-fifths,
  .mq-md-up-four-tenths {
    width: 40% !important; }

  .mq-md-up-three-fifths,
  .mq-md-up-six-tenths {
    width: 60% !important; }

  .mq-md-up-four-fifths,
  .mq-md-up-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-md-up-one-sixth,
  .mq-md-up-two-twelfths {
    width: 16.6666666% !important; }

  .mq-md-up-five-sixths,
  .mq-md-up-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-md-up-one-eighth {
    width: 12.5% !important; }

  .mq-md-up-three-eighths {
    width: 37.5% !important; }

  .mq-md-up-five-eighths {
    width: 62.5% !important; }

  .mq-md-up-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-md-up-one-ninth {
    width: 11.1111111% !important; }

  .mq-md-up-two-ninths {
    width: 22.2222222% !important; }

  .mq-md-up-four-ninths {
    width: 44.4444444% !important; }

  .mq-md-up-five-ninths {
    width: 55.5555555% !important; }

  .mq-md-up-seven-ninths {
    width: 77.7777777% !important; }

  .mq-md-up-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-md-up-one-tenth {
    width: 10% !important; }

  .mq-md-up-three-tenths {
    width: 30% !important; }

  .mq-md-up-seven-tenths {
    width: 70% !important; }

  .mq-md-up-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-md-up-one-twelfth {
    width: 8.3333333% !important; }

  .mq-md-up-five-twelfths {
    width: 41.6666666% !important; }

  .mq-md-up-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-md-up-eleven-twelfths {
    width: 91.6666666% !important; } }
@media screen and (min-width: 1024px) {
  /**
   * Whole.
   */
  .mq-lg-up-one-whole {
    width: 100% !important; }

  /**
   * Halves.
   */
  .mq-lg-up-one-half,
  .mq-lg-up-two-quarters,
  .mq-lg-up-three-sixths,
  .mq-lg-up-four-eighths,
  .mq-lg-up-five-tenths,
  .mq-lg-up-six-twelfths {
    width: 50% !important; }

  /**
   * Thirds.
   */
  .mq-lg-up-one-third,
  .mq-lg-up-two-sixths,
  .mq-lg-up-three-ninths,
  .mq-lg-up-four-twelfths {
    width: 33.3333333% !important; }

  .mq-lg-up-two-thirds,
  .mq-lg-up-four-sixths,
  .mq-lg-up-six-ninths,
  .mq-lg-up-eight-twelfths {
    width: 66.6666666% !important; }

  /**
   * Quarters.
   */
  .mq-lg-up-one-quarter,
  .mq-lg-up-two-eighths,
  .mq-lg-up-three-twelfths {
    width: 25% !important; }

  .mq-lg-up-three-quarters,
  .mq-lg-up-six-eighths,
  .mq-lg-up-nine-twelfths {
    width: 75% !important; }

  /**
   * Fifths.
   */
  .mq-lg-up-one-fifth,
  .mq-lg-up-two-tenths {
    width: 20% !important; }

  .mq-lg-up-two-fifths,
  .mq-lg-up-four-tenths {
    width: 40% !important; }

  .mq-lg-up-three-fifths,
  .mq-lg-up-six-tenths {
    width: 60% !important; }

  .mq-lg-up-four-fifths,
  .mq-lg-up-eight-tenths {
    width: 80% !important; }

  /**
   * Sixths.
   */
  .mq-lg-up-one-sixth,
  .mq-lg-up-two-twelfths {
    width: 16.6666666% !important; }

  .mq-lg-up-five-sixths,
  .mq-lg-up-ten-twelfths {
    width: 83.3333333% !important; }

  /**
   * Eighths.
   */
  .mq-lg-up-one-eighth {
    width: 12.5% !important; }

  .mq-lg-up-three-eighths {
    width: 37.5% !important; }

  .mq-lg-up-five-eighths {
    width: 62.5% !important; }

  .mq-lg-up-seven-eighths {
    width: 87.5% !important; }

  /**
   * Ninths.
   */
  .mq-lg-up-one-ninth {
    width: 11.1111111% !important; }

  .mq-lg-up-two-ninths {
    width: 22.2222222% !important; }

  .mq-lg-up-four-ninths {
    width: 44.4444444% !important; }

  .mq-lg-up-five-ninths {
    width: 55.5555555% !important; }

  .mq-lg-up-seven-ninths {
    width: 77.7777777% !important; }

  .mq-lg-up-eight-ninths {
    width: 88.8888888% !important; }

  /**
   * Tenths.
   */
  .mq-lg-up-one-tenth {
    width: 10% !important; }

  .mq-lg-up-three-tenths {
    width: 30% !important; }

  .mq-lg-up-seven-tenths {
    width: 70% !important; }

  .mq-lg-up-nine-tenths {
    width: 90% !important; }

  /**
   * Twelfths.
   */
  .mq-lg-up-one-twelfth {
    width: 8.3333333% !important; }

  .mq-lg-up-five-twelfths {
    width: 41.6666666% !important; }

  .mq-lg-up-seven-twelfths {
    width: 58.3333333% !important; }

  .mq-lg-up-eleven-twelfths {
    width: 91.6666666% !important; } }
/*------------------------------------*\
    #HEADINGS
\*------------------------------------*/
/**
 * Headings 1–6’s corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 *
 * Use these helper classes to cause other elements to adopt the styling of the
 * respective heading, e.g.:
 *
   <h2 class="alpha">Lorem ipsum</h2>
 *
 */
.alpha {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.3333333333; }

.beta {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6; }

.gamma {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1; }

.delta {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2; }

.epsilon {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5; }

.zeta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.7142857143; }

/*------------------------------------*\
    #ALIGNMENT HELPER CLASSES
\*------------------------------------*/
.right {
  float: right !important; }

.left {
  float: left !important; }

.text-right {
  text-align: right !important; }

.text-left {
  text-align: left !important; }

.text-center {
  text-align: center !important; }

/*------------------------------------*\
    #MISCELLANEOUS HELPER CLASSES
\*------------------------------------*/
a.inactive {
  cursor: default; }

span.nowrap {
  white-space: nowrap; }

/*---------------------------------------------------------------------------*\
	USER -- working file of user-generated styling
\*---------------------------------------------------------------------------*/
/* THIS IS MY WORKING STYLESHEET, TO BE ORGANISED AS AND WHEN */


.container {
  background: url(../img/view_from_escondrijo_terrace.jpg) no-repeat center center;
  background-size: cover;
}
.container--content {
  height: 600px;
  height: 80vh;
}